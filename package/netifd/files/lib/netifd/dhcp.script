#!/bin/sh
[ -z "$1" ] && echo "Error: should be run by udhcpc" && exit 1

. /lib/functions.sh
. /lib/netifd/netifd-proto.sh

change_state () {
	[ -n "$INTERFACE" ] || return
	uci_revert_state "$1" "$2" "$3" "$4"
	uci_set_state "$1" "$2" "$3" "$4"
}


set_classless_routes() {
	local max=128
	local type
	while [ -n "$1" -a -n "$2" -a $max -gt 0 ]; do
		proto_add_ipv4_route "${1%%/*}" "${1##*/}" "$2"
		max=$(($max-1))
		shift 2
	done
}

setup_interface () {
	proto_init_update "*" 1
	proto_add_ipv4_address "$ip" "${subnet:-255.255.255.0}"
	# TODO: apply $broadcast

	for i in $router; do
		proto_add_ipv4_route 0.0.0.0 0 "$i"
	done

	# CIDR STATIC ROUTES (rfc3442)
	[ -n "$staticroutes" ] && set_classless_routes $staticroutes
	[ -n "$msstaticroutes" ] && set_classless_routes $msstaticroutes

	for dns in $dns; do
		proto_add_dns_server "$dns"
	done
	for domain in $domain; do
		proto_add_dns_search "$domain"
	done
	proto_send_update "$INTERFACE"

	
	
	local old_ip
	local old_broadcast
	local old_subnet
	[ -n "$INTERFACE" ] && {
		old_ip="$(uci_get_state network "$INTERFACE" ipaddr)"
		old_broadcast="$(uci_get_state network "$INTERFACE" broadcast)"
		old_subnet="$(uci_get_state network "$INTERFACE" netmask)"
	}
	[ "$ip" != "$old_ip" ] \
	|| [ "${broadcast:-+}" != "$old_broadcast" ] \
	|| [ "${subnet:-255.255.255.0}" != "$old_subnet" ] && {
		change_state network "$INTERFACE" ipaddr "$ip"
		change_state network "$INTERFACE" broadcast "${broadcast:-+}"
		change_state network "$INTERFACE" netmask "${subnet:-255.255.255.0}"
	}
	change_state network "$INTERFACE" gateway "$router"
	[ -n "$hostname" ] &&	change_state network "$INTERFACE" lease_hostname "$hostname"
	
	change_state network "$INTERFACE" lease_server "$serverid" 
	change_state network "$INTERFACE" lease_lifetime "$lease" 
	change_state network "$INTERFACE" lease_acquired "$(sed -ne 's![^0-9].*$!!p' /proc/uptime)"



	# TODO
	# [ -n "$ntpsrv" ] && 	change_state network "$ifc" lease_ntpsrv "$ntpsrv"
	# [ -n "$timesvr" ] && 	change_state network "$ifc" lease_timesrv "$timesvr"
	# [ -n "$timezone" ] && 	change_state network "$ifc" lease_timezone "$timezone"
}

deconfig_interface() {
	proto_init_update "*" 0
	proto_send_update "$INTERFACE"
}

case "$1" in
	deconfig)
		deconfig_interface
	;;
	renew|bound)
		setup_interface
	;;
esac

# user rules
[ -f /etc/udhcpc.user ] && . /etc/udhcpc.user

exit 0
